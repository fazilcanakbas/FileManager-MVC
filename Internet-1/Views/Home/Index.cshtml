    @model List<FileManagerModel>
    @using Microsoft.AspNetCore.Http
    @using System.Net;

    @{
        var currentPath = ViewBag.CurrentPath as string;
        var uploadMessage = TempData["UploadMessage"] as string;
        var deleteMessage = TempData["DeleteMessage"] as string;
        var downloadMessage = TempData["DownloadMessage"] as string;
    }

    <div class="container">
        <h2>Dosya Yönetim</h2>

        <!-- Yeni Klasör Butonu -->
        <button class="btn btn-success mb-4" onclick="showCreateFolderModal()">Yeni Klasör</button>

        <!-- Dosya Yükleme -->
        <form action="@Url.Action("UploadFile", "FileManager")" method="post" enctype="multipart/form-data">
            <input type="hidden" name="folderPath" value="@currentPath" />
            <div class="form-group">
                <input type="file" name="file" class="form-control" />
                <button type="submit" class="btn btn-primary mt-2">Yükle</button>
            </div>
        </form>

        <!-- Klasörler -->
        <div>
            <h3>Klasörler</h3>
            <ul class="folder-list">
                @foreach (var item in Model.Where(i => i.Type == "DefaultType"))
                {
                    <li class="folder-item">
                        <i class="fas fa-folder folder-icon"></i> <!-- Sol tarafta ikon -->
                        <span class="folder-name">@item.Name</span> <!-- Ortada dosya adı -->
                        <a href="javascript:void(0);" onclick="showDeleteConfirmation('@Url.Action("DeleteFolder", "FileManager", new { path = WebUtility.UrlEncode(item.Path), type = item.Type })')" class="delete-icon">
                            <i class="fas fa-trash"></i> <!-- Sağ tarafta çöp kutusu -->
                        </a>
                    </li>
                }
            </ul>
        </div>

        <!-- Dosyalar -->
        <div>
        <h3>Dosyalar</h3>
        <div class="file-grid">
            @foreach (var item in Model.Where(i => i.Type == "File"))
            {
                <div class="file-card">
                    <div class="file-preview">
                        @if (item.Name.EndsWith(".png") || item.Name.EndsWith(".jpg") || item.Name.EndsWith(".jpeg"))
                        {
                            <img src="@Url.Content("~/uploads/" + item.Name)"
                                 alt="@item.Name"
                                 onclick="openModal('@Url.Content("~/uploads/" + item.Name)')"
                                 style="cursor: pointer;" />
                        }
                        else if (item.Name.EndsWith(".txt"))
                        {
                            <i class="fas fa-file-alt fa-3x file-icon"></i> <!-- TXT için ikon -->
                        }
                        else if (item.Name.EndsWith(".zip") || item.Name.EndsWith(".rar"))
                        {
                            <i class="fas fa-file-archive fa-3x file-icon"></i> <!-- ZIP/RAR için ikon -->
                        }
                        else if (item.Name.EndsWith(".mp4") || item.Name.EndsWith(".avi") || item.Name.EndsWith(".mkv"))
                        {
                            <video width="100" height="100" controls>
                                <source src="@Url.Content("~/uploads/" + item.Name)" type="video/mp4">
                                Your browser does not support the video tag.
                            </video>
                        }

                        else if (item.Name.EndsWith(".pdf"))
                        {
                            <i class="fas fa-file-pdf fa-3x file-icon"></i> <!-- PDF için ikon -->
                        }
                        else
                        {
                            <i class="fas fa-file fa-3x file-icon"></i> <!-- Diğer dosya türleri için genel ikon -->
                        }
                    </div>

                        <div class="file-info">
                            <p class="file-name">@item.Name</p>
                            <div class="file-actions">
                                <a href="@Url.Action("Download", "FileManager", new { filePath = WebUtility.UrlEncode(item.Path) })" class="btn btn-primary btn-sm">
                                    <i class="fas fa-download"></i>
                                </a>
                                <a href="javascript:void(0);" onclick="showDeleteConfirmation('@Url.Action("Delete", "FileManager", new { path = WebUtility.UrlEncode(item.Path), type = item.Type })')" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


    <!-- Modal Yapıları -->
    <!-- Yeni Klasör Modal -->
    <div id="createFolderModal" class="modal" style="display: none;">
        <div class="modal-content">
            <h4>Yeni Klasör Oluştur</h4>
            <form action="@Url.Action("CreateFolder", "FileManager")" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="folderPath" value="@currentPath" />
                <div class="form-groupp">
                    <input type="text" name="folderName" class="form-controll" placeholder="Klasör İsmi" required />
                </div>
                <div class="button-containerr">
                    <button type="submit" class="btn btn-success">Oluştur</button>
                    <button type="button" class="btn btn-secondary" onclick="closeCreateFolderModal()">İptal</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Diğer Modallar -->
    <div id="imageModal" class="modal" style="display: none;">
        <span class="close" onclick="closeModal()">&times;</span>
        <img class="modal-content" id="modalImage" />
    </div>

    <div id="deleteConfirmationModal" class="modal" style="display: none;">
        <div class="modal-content">
            <h4>Kalıcı olarak silmek istediğinize emin misiniz?</h4>
            <div class="button-container">
                <button class="btn btn-danger btn-sm" id="confirmDeleteBtn">Evet</button>
                <button class="btn btn-secondary btn-sm" onclick="closeDeleteConfirmation()">İptal</button>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(uploadMessage))
    {
        <div id="uploadMessage" class="toast-notification">@uploadMessage</div>
    }
    @if (!string.IsNullOrEmpty(deleteMessage))
    {
        <div id="deleteMessage" class="toast-notification">@deleteMessage</div>
    }
    @if (!string.IsNullOrEmpty(downloadMessage))
    {
        <div id="downloadMessage" class="toast-notification">@downloadMessage</div>
    }
    <style>
        /* Genel Buton Stil */
    .btn {
        font-size: 14px;
        font-weight: 500;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    /* Yeni Klasör Butonu */
    .btn-success {
        background-color: #28a745;
        border: none;
        color: white;
    }

    .btn-success:hover {
        background-color: #218838;
        transform: scale(1.05); /* Hover animasyonu */
    }

    /* Yükleme Butonu */
    .btn-primary {
        background-color: #007bff;
        border: none;
        color: white;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        transform: scale(1.05); /* Hover animasyonu */
    }

    /* Dosya Yükleme Formu */
    .form-group {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 10px;
    }

    .form-control {
        padding: 8px 12px;
        font-size: 14px;
        border-radius: 5px;
        border: 1px solid #ccc;
        box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
        transition: border-color 0.3s ease;
    }

    .form-control:focus {
        border-color: #007bff;
        outline: none;
    }

    input[type="file"] {
        background-color: #f8f9fa;
    }

    /* Margin ve Bottom Padding */
    .mb-4 {
        margin-bottom: 20px;
    }

    /* Yükle Butonunun Mesafesi */
    .mt-2 {
        margin-top: 10px;
    }

    /* Mobil Uyumluluk */
    @@media (max-width: 768px) {
        .form-group {
            gap: 8px;
        }
        .btn {
            font-size: 13px;
            padding: 8px 12px;
        }
    }

        /* Klasör başlığı */
        h3 {
            font-size: 18px;
            margin-bottom: 10px;
            font-weight: bold;
        }

        /* Liste düzeni */
        .folder-list {
            display: flex; /* Flex düzeni etkinleştir */
            list-style-type: none; /* Noktaları kaldır */
            padding: 0;
            margin: 0;
            flex-wrap: wrap; /* Uzun öğelerde yeni satıra geç */
            gap: 10px; /* Klasörler arasında boşluk */
        }

        /* Klasör kutusu */
        .folder-item {
            display: flex;
            align-items: center; /* Dikey hizalama */
            justify-content: space-between; /* İkonlar arasında boşluk */
            padding: 10px; /* İç boşluk */
            width: 178px; /* Maksimum genişlik */
            height:45px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            transition: background-color 0.2s ease-in-out;
        }

            /* Hover efekti */
            .folder-item:hover {
                transform: translateY(-5px);
                        box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);
                    }

        /* Sol taraftaki ikon */
        .folder-icon {
            color: #007bff;
            margin-right: 5px;
            font-size: 14px;
            flex-shrink: 0;
        }

        /* Dosya adı */
        .folder-name {
            padding-left:5px;
            padding-top:7px;
            font-size: 15px;
            color: #333;
            font-weight: bold;
            flex-grow: 1;
            overflow: hidden;
            text-overflow: ellipsis;
            text-align: left; /* Yazıyı sola hizalar */
        }

        /* Sağ taraftaki çöp kutusu ikonu */
        .delete-icon {
            color: #ff4d4f;
            font-size: 14px;
            cursor: pointer;
            margin-left: 5px;
            transition: color 0.2s ease-in-out;
        }

            .delete-icon:hover {
                color: #d9363e;
            }

        .modal {
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: lightcyan;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            width: 400px;
        }

         .modal img {
            width: 600px;
            height: 80%;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }

        .close {
            position: absolute;
            top: 10px;
            right: 25px;
            color: white;
            font-size: 35px;
            font-weight: bold;
            cursor: pointer;
        }

        .file-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 10px;
        }

        .file-card {
            width: 150px;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 10px;
            background-color: #fff;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .file-card2 {
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 15px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

        .file-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
        }

        .file-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
        }

    
        .folder-icon {
            color: black;
        }

        .file-icon {
            color: #4caf50;
        }

        h3 {
            margin-top: 30px;
            color: #333;
            font-weight: bold;
        }


        .file-preview {
            width: 100%;
            height: 150px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #f9f9f9;
            margin-bottom: 10px;
        }

    

        .file-preview img {
            max-width: 100%;
            max-height: 100%;
            object-fit: cover;
            cursor: pointer;
        }
        .file-gridd{
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr)); /* Dinamik sütunlar */
            gap: 20px;
            margin-top: 20px;
        }

        .file-preview2 {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
            color: #007bff;
        }

        .folder-info {
            font-size: 14px;
            font-weight: bold;
            color: #333;
        }

        .folder-name {
            margin-bottom: 8px;
        }

        .folder-actions .btn {
            padding: 5px 10px;
            font-size: 12px;
        }
        .folder-icon,
        .file-icon {
            color: #007bff;
        }

        .file-info {
            text-align: center;
        }

        .file-name {
            font-size: 14px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .file-actions {
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .btn-sm {
            padding: 5px 10px;
            font-size: 12px;
        }
         .toast-notification {
            position: fixed;
            bottom: 70px;
            right: 20px;
            background-color: #4CAF50; /* Green for success */
            color: white;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            opacity: 1;
            transition: opacity 0.5s ease-out;
        }

            .toast-notification.error {
                background-color: #f44336; /* Red for error */
            }

            .toast-notification.fade-out {
                opacity: 0;
                transition: opacity 1s ease-out;
            }

 
        .form-controll {
       
            width:300px;
            height:50px;
            border-radius:10px;
            background-color:aliceblue;
            border-color:aliceblue;
            border-width:2;
            box-shadow:3px 6px 6px black;
        
        }

        .button-containerr {
      
           padding-top:10px;
      
        }
        .btn-success{
            margin-right: 15px;
        }
        </style>

    <script>
          function openModal(imageSrc) {
            const modal = document.getElementById("imageModal");
            const modalImage = document.getElementById("modalImage");
            if (modal && modalImage) {
                modalImage.src = imageSrc; // Resim kaynağını ayarla
                modal.style.display = "flex"; // Modalı görünür yap
            }
        }

        function closeModal() {
            const modal = document.getElementById("imageModal");
            if (modal) {
                modal.style.display = "none"; // Modalı gizle
            }
        }

       window.onload = function () {
            ["uploadMessage", "deleteMessage", "downloadMessage"].forEach((id) => {
                const message = document.getElementById(id);
                if (message) {
                    setTimeout(() => {
                        message.classList.add("fade-out");
                    }, 3000);

                    setTimeout(() => {
                        message.style.display = "none";
                    }, 3500);
                }
            });
        };

        var deleteUrl = "";
        function showDeleteConfirmation(url) {
            deleteUrl = url;
            document.getElementById("deleteConfirmationModal").style.display = "flex";
        }

        document.getElementById("confirmDeleteBtn")?.addEventListener("click", function () {
            window.location.href = deleteUrl;
        });

        function closeDeleteConfirmation() {
            document.getElementById("deleteConfirmationModal").style.display = "none";
        }
        function showCreateFolderModal() {
            const modal = document.getElementById("createFolderModal");
            if (modal) {
                modal.style.display = "flex";
            }
        }

        function closeCreateFolderModal() {
            const modal = document.getElementById("createFolderModal");
            if (modal) {
                modal.style.display = "none";
            }
        }

        window.onload = function () {
            ["uploadMessage", "deleteMessage", "downloadMessage"].forEach((id) => {
                const message = document.getElementById(id);
                if (message) {
                    setTimeout(() => {
                        message.classList.add("fade-out");
                    }, 3000);

                    setTimeout(() => {
                        message.style.display = "none";
                    }, 3500);
                }
            });
        };
    </script>
